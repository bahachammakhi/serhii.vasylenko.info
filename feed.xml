<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://serhii.vasylenko.info</id><title>Serhii Vasylenko</title><subtitle>Here I publish my notes about different things, mostly technical.</subtitle> <updated>2021-05-27T13:21:41+03:00</updated> <author> <name>Serhii Vasylenko</name> <uri>https://serhii.vasylenko.info</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://serhii.vasylenko.info" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Serhii Vasylenko </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Run Ansible playbook on mac1.metal instances fleet with AWS Systems Manager</title><link href="https://serhii.vasylenko.info/2021/05/27/run-ansible-playbook-mac1-metal-aws-systems-manager.html" rel="alternate" type="text/html" title="Run Ansible playbook on mac1.metal instances fleet with AWS Systems Manager" /><published>2021-05-27T00:00:00+03:00</published> <updated>2021-05-27T00:00:00+03:00</updated> <id>https://serhii.vasylenko.info/2021/05/27/run-ansible-playbook-mac1-metal-aws-systems-manager.html</id> <content src="https://serhii.vasylenko.info/2021/05/27/run-ansible-playbook-mac1-metal-aws-systems-manager.html" /> <author> <name>Serhii Vasylenko</name> </author> <category term="Technical Blogs" /> <summary> In days of containers and serverless applications, Ansible looks not such a trendy thing. But still, there are cases when it helps, and there are cases when it combines very well with brand new product offerings, such as EC2 Mac instances. And the more I use mac1.metal in AWS, the more I see that Ansible becomes a bedrock of software customization in my case. (Not) Available out of the box A... </summary> </entry> <entry><title>Configure HTTP Security headers with CloudFront Functions</title><link href="https://serhii.vasylenko.info/2021/05/21/configure-http-security-headers-with-cloudfront-functions.html" rel="alternate" type="text/html" title="Configure HTTP Security headers with CloudFront Functions" /><published>2021-05-21T00:00:00+03:00</published> <updated>2021-05-21T00:00:00+03:00</updated> <id>https://serhii.vasylenko.info/2021/05/21/configure-http-security-headers-with-cloudfront-functions.html</id> <content src="https://serhii.vasylenko.info/2021/05/21/configure-http-security-headers-with-cloudfront-functions.html" /> <author> <name>Serhii Vasylenko</name> </author> <category term="Technical Blogs" /> <summary> A couple of weeks ago, AWS released CloudFront Functions — a “true edge” compute capability for the CloudFront. It is “true edge” because Functions work on 200+ edge locations (link to doc) while its predecessor, the Lambda@Edge, runs on a small number of regional edge caches. One of the use cases for Lambda@Edge was adding security HTTP headers (it’s even listed on the product page), and now... </summary> </entry> <entry><title>Using TinyPNG Image Compression From MacOS Finder Contextual Menu</title><link href="https://serhii.vasylenko.info/2021/02/14/image-compression-with-tinypng-from-macos-contextual-menu.html" rel="alternate" type="text/html" title="Using TinyPNG Image Compression From MacOS Finder Contextual Menu" /><published>2021-02-14T00:00:00+02:00</published> <updated>2021-02-14T00:00:00+02:00</updated> <id>https://serhii.vasylenko.info/2021/02/14/image-compression-with-tinypng-from-macos-contextual-menu.html</id> <content src="https://serhii.vasylenko.info/2021/02/14/image-compression-with-tinypng-from-macos-contextual-menu.html" /> <author> <name>Serhii Vasylenko</name> </author> <category term="Technical Blogs" /> <summary> I just wanted to compress one image, but went to far… or “How to add TinyPNG image compression to your macOS Finder contextual menu.” What is it and how it works You select needed files or folders, then right-click on them, click on the Services menu item and choose TinyPNG. After a moment, the new optimized versions of images will appear near to original files. If you selected a folder alo... </summary> </entry> <entry><title>Customizing mac1.metal EC2 AMI — new guts, more glory</title><link href="https://serhii.vasylenko.info/2021/02/01/customizing-mac1-metal-ec2-ami.html" rel="alternate" type="text/html" title="Customizing mac1.metal EC2 AMI — new guts, more glory" /><published>2021-02-01T00:00:00+02:00</published> <updated>2021-02-01T00:00:00+02:00</updated> <id>https://serhii.vasylenko.info/2021/02/01/customizing-mac1-metal-ec2-ami.html</id> <content src="https://serhii.vasylenko.info/2021/02/01/customizing-mac1-metal-ec2-ami.html" /> <author> <name>Serhii Vasylenko</name> </author> <category term="Technical Blogs" /> <summary> I guess macOS was designed for a user, not for the ops or engineers, so this is why its customization and usage for CI/CD are not trivial (compared to something Linux-based). A smart guess, huh? Configuration Management Native Apple’s Mobile device management (a.k.a MDM) and Jamf is probably the most potent combination for macOS configuration. But as much as it’s mighty, it is a cumbersome com... </summary> </entry> <entry><title>Terraforming mac1.metal at AWS</title><link href="https://serhii.vasylenko.info/2021/01/20/terraforming-mac1-metal-at-AWS.html" rel="alternate" type="text/html" title="Terraforming mac1.metal at AWS" /><published>2021-01-20T00:00:00+02:00</published> <updated>2021-01-20T00:00:00+02:00</updated> <id>https://serhii.vasylenko.info/2021/01/20/terraforming-mac1-metal-at-AWS.html</id> <content src="https://serhii.vasylenko.info/2021/01/20/terraforming-mac1-metal-at-AWS.html" /> <author> <name>Serhii Vasylenko</name> </author> <category term="Technical Blogs" /> <summary> Recently AWS announced the support for Mac mini instances. I believe this is huge, even despite the many constraints this solution has. Oh, and the price is as huge as the announcement as well. But still, this offering opens the door to seamless macOS CI/CD integration into existing AWS infrastructure. Here is a tip for engineers like me who decided to give this new instance type a try: mana... </summary> </entry> </feed>
